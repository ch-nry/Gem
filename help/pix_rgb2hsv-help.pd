#N canvas 6 61 633 364 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 245 cnv 15 430 80 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 248 Inlets:;
#X text 38 295 Outlets:;
#X obj 8 206 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 205 Arguments:;
#X obj 7 76 cnv 15 430 125 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 77 cnv 15 170 250 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 514 254 cnv 15 100 60 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X obj 450 158 cnv 15 160 60 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 84 gemhead;
#X text 71 31 Class: pix object;
#X text 63 216 <none>;
#X text 56 308 Outlet 1: gemlist;
#X text 63 262 Inlet 1: gemlist;
#X obj 451 233 _pix2rectangle 3;
#X obj 468 165 tgl 15 1 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000 1 1;
#X text 63 275 Inlet 1: 1|0 : apply/don't apply (default:1);
#X text 94 340 see also:;
#X obj 186 338 pix_hsv2rgb;
#X text 50 12 Synopsis: [pix_rgb2hsv];
#X text 29 76 Description: convert RGB into HSV;
#X text 25 96 [pix_rgb2hsv] will (virtually) transform an RGB(red \, green \, blue)-Image into the HSV (hue \, saturation \, value) color-space.;
#X text 30 140 This might enable simpler colour-detection...;
#X text 29 162 On the technical (internal) side \, the image still stays RGBA. The Red-channel is filled with Hue-values....;
#X obj 451 186 pix_rgb2hsv;
#X obj 521 8 declare -lib Gem;
#X obj 520 261 _gemwin;
#X obj 451 113 pix_test;
#X connect 11 0 29 0;
#X connect 17 0 26 0;
#X connect 26 0 16 0;
#X connect 29 0 26 0;
