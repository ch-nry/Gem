#N canvas 450 81 684 364 10;
#X declare -lib Gem;
#X obj 499 97 cnv 15 170 250 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X obj 7 65 cnv 15 450 140 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 8 256 cnv 15 450 100 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 9 261 Inlets:;
#X obj 8 216 cnv 15 450 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 215 Arguments:;
#X text 482 8 GEM object;
#X text 27 273 Inlet 1: gemlist;
#X text 9 290 Outlets:;
#X text 21 303 Outlet 1: gemlist;
#X text 505 79 Example:;
#X text 33 14 Synopsis: [render_trigger];
#X obj 502 128 cnv 15 160 120 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 510 102 gemhead;
#X obj 510 137 render_trigger;
#X obj 510 183 t b a b;
#X obj 532 258 square;
#X text 54 30 Class: control object;
#X text 7 69 Description: triggers on rendering;
#X text 29 85 render_trigger allows you to know when the actual rendering is occurring in a gemlist. If you think of the gemlist as a list of actions which occur \, the pre-bang outlet sends a bang out before any of the actions below the render_trigger in the gemlist. The post-bang sends out a bang after all of the actions have occurred.;
#X text 72 225 (none);
#X text 21 316 Outlet 2: bang : pre-render;
#X text 21 330 Outlet 2: bang : post-render;
#X text 9 172 !THIS IS OBOLETE AS YOU CAN NOW USE THE [trigger] OBJECT FOR THE SAME PURPOSE!;
#X obj 602 158 bng 15 250 50 0 empty empty post 20 8 0 8 #fcfcfc #000000 #000000;
#X obj 556 158 bng 15 250 50 0 empty empty pre 20 8 0 8 #fcfcfc #000000 #000000;
#X obj 510 227 bng 15 250 50 0 empty empty post 20 8 0 8 #fcfcfc #000000 #000000;
#X obj 554 208 bng 15 250 50 0 empty empty pre 20 8 0 8 #fcfcfc #000000 #000000;
#X obj 558 8 declare -lib Gem;
#X obj 519 294 _gemwin 2;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 14 1 25 0;
#X connect 14 2 24 0;
#X connect 15 0 26 0;
#X connect 15 1 16 0;
#X connect 15 2 27 0;
